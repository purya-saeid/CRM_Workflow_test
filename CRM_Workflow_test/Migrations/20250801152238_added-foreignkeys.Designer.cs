// <auto-generated />
using System;
using CRM_Workflow_test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM_Workflow_test.Migrations
{
    [DbContext(typeof(appDBContext))]
    [Migration("20250801152238_added-foreignkeys")]
    partial class addedforeignkeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM_Workflow_test.Models.WFInitiation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("initiatorId")
                        .HasColumnType("int");

                    b.Property<int>("initiatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("taskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("initiatorUserId");

                    b.HasIndex("taskId");

                    b.ToTable("WFInitiations");
                });

            modelBuilder.Entity("CRM_Workflow_test.Models.task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isHead")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("CRM_Workflow_test.Models.taskInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("inChargeUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("taskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("inChargeUserId");

                    b.HasIndex("taskId");

                    b.ToTable("TaskInstances");
                });

            modelBuilder.Entity("CRM_Workflow_test.Models.taskTransition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("childId")
                        .HasColumnType("int");

                    b.Property<string>("condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("taskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("childId");

                    b.HasIndex("taskId");

                    b.ToTable("TasksTransition");
                });

            modelBuilder.Entity("CRM_Workflow_test.Models.user", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CRM_Workflow_test.Models.WFInitiation", b =>
                {
                    b.HasOne("CRM_Workflow_test.Models.user", "initiatorUser")
                        .WithMany()
                        .HasForeignKey("initiatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_Workflow_test.Models.task", "task")
                        .WithMany()
                        .HasForeignKey("taskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("initiatorUser");

                    b.Navigation("task");
                });

            modelBuilder.Entity("CRM_Workflow_test.Models.taskInstance", b =>
                {
                    b.HasOne("CRM_Workflow_test.Models.user", "inChargeUser")
                        .WithMany()
                        .HasForeignKey("inChargeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_Workflow_test.Models.task", "task")
                        .WithMany()
                        .HasForeignKey("taskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("inChargeUser");

                    b.Navigation("task");
                });

            modelBuilder.Entity("CRM_Workflow_test.Models.taskTransition", b =>
                {
                    b.HasOne("CRM_Workflow_test.Models.task", "childTask")
                        .WithMany()
                        .HasForeignKey("childId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CRM_Workflow_test.Models.task", "task")
                        .WithMany()
                        .HasForeignKey("taskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("childTask");

                    b.Navigation("task");
                });
#pragma warning restore 612, 618
        }
    }
}
